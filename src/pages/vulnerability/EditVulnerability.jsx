import axios from "axios";
import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import Button from '@mui/material/Button';
import Select from '@mui/joy/Select';
import Option from '@mui/joy/Option';

function EditVulnerability() {
    const [vulnerability, setVulnerability] = useState({});
    const [responseMsg, setResponseMsg] = useState("");

    const user = JSON.parse(localStorage.getItem("user"));

    const navigate = useNavigate();
    const { vId } = useParams();

    useEffect(() => {
        axios.post(`${process.env.REACT_APP_BACKEND_URL}/v1/getVulnerability`, { id: vId }, { headers: { 'x-access-token': `${user.accessToken}` } }).then(response => {
            setVulnerability(response.data.vulnerability);
        }).catch(error => console.log(error))
    }, []);

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const response = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/v1/updateVulnerability`, { id: vId, vulnerability }, { headers: { 'x-access-token': `${user.accessToken}` } });
            setResponseMsg(response.data.message);
            navigate("/vulnerabilities")
        } catch (error) {
            console.log(error);
        }
        console.log(vulnerability)

    }



    return (
        <form onSubmit={handleSubmit}>
            <div className="">
                <table>
                    <tbody>
                        <tr>
                            <th>Vulnerability</th>
                            <td>
                                <textarea
                                    name=""
                                    id=""
                                    cols="120"
                                    rows="2"
                                    required
                                    defaultValue={vulnerability.Vulnerability}
                                    onChange={
                                        (e) => setVulnerability({ ...vulnerability, Vulnerability: e.target.value })
                                    }>
                                </textarea>
                            </td>
                        </tr>
                        <tr>
                            <th>Severity</th>
                            <td>
                                <Select
                                    placeholder={vulnerability.Severity}
                                    variant="solid"
                                    color="primary"
                                    size="sm"
                                    required
                                    name=""
                                    onChange={
                                        (e, newValue) => setVulnerability({ ...vulnerability, Severity: newValue })
                                    }
                                    id="">
                                    <Option value="Critical">Critical</Option>
                                    <Option value="High">High</Option>
                                    <Option value="Medium">Medium</Option>
                                    <Option value="Low">Low</Option>
                                    <Option value="Informational">Informational</Option>
                                </Select>
                            </td>
                        </tr>
                        <tr>
                            <th>Description</th>
                            <td>
                                <textarea
                                    defaultValue={vulnerability.Description}
                                    required
                                    name=""
                                    id=""
                                    cols="120"
                                    rows="6"
                                    onChange={(e) => setVulnerability({ ...vulnerability, Description: e.target.value })}></textarea></td>
                        </tr>
                        <tr>
                            <th>Remediation</th>
                            <td>
                                <textarea required name="" id="" cols="120" rows="6"
                                    defaultValue={vulnerability.Remediation}
                                    onChange={
                                        (e) => setVulnerability({ ...vulnerability, Remediation: e.target.value })
                                    }>
                                </textarea>
                            </td>
                        </tr>
                        <tr>
                            <th>References</th>
                            <td>
                                <textarea required name="" id="" cols="120" rows="6"
                                    defaultValue={vulnerability.References}
                                    onChange={
                                        (e) => setVulnerability({ ...vulnerability, References: e.target.value })
                                    }>
                                </textarea>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <Button variant="contained" required size="small" style={{ margin: "1rem 0" }} type={"submit"}>Update</Button>
                <p>{responseMsg}</p>
            </div>
        </form>
    )
}

export default EditVulnerability;
